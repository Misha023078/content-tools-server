#!/bin/bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ content-tools-server

set -e

echo "üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ content-tools-server..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker compose down -v 2>/dev/null || true

# –û—á–∏—â–∞–µ–º Docker –∫—ç—à
echo "üßπ –û—á–∏—â–∞–µ–º Docker –∫—ç—à..."
docker system prune -f
docker builder prune -f

# –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
echo "üìù –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."
if [ ! -f ".env" ]; then
    cp env.example .env
    echo "‚úÖ –°–æ–∑–¥–∞–Ω .env –∏–∑ —à–∞–±–ª–æ–Ω–∞"
    echo "‚ö†Ô∏è  –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Å –≤–∞—à–∏–º–∏ API –∫–ª—é—á–∞–º–∏!"
fi

if [ ! -f "config.yaml" ]; then
    cp config.yaml.example config.yaml
    echo "‚úÖ –°–æ–∑–¥–∞–Ω config.yaml –∏–∑ —à–∞–±–ª–æ–Ω–∞"
fi

# –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Å–±–æ—Ä–∫–∏
echo "üî® –ü—Ä–æ–±—É–µ–º —Å–±–æ—Ä–∫—É —Å —É–ø—Ä–æ—â—ë–Ω–Ω—ã–º Dockerfile..."

# –°—Ç—Ä–∞—Ç–µ–≥–∏—è 1: –£–ø—Ä–æ—â—ë–Ω–Ω—ã–π Dockerfile
if [ -f "Dockerfile.simple" ]; then
    echo "üì¶ –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ø—Ä–æ—â—ë–Ω–Ω—ã–π Dockerfile..."
    docker compose -f docker-compose.simple.yml build --no-cache
    if [ $? -eq 0 ]; then
        echo "‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞ —Å —É–ø—Ä–æ—â—ë–Ω–Ω—ã–º Dockerfile"
        docker compose -f docker-compose.simple.yml up -d
        echo "üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
        echo "üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: docker compose -f docker-compose.simple.yml ps"
        echo "üìã –õ–æ–≥–∏: docker compose -f docker-compose.simple.yml logs -f"
        exit 0
    fi
fi

# –°—Ç—Ä–∞—Ç–µ–≥–∏—è 2: –û–±—ã—á–Ω—ã–π Dockerfile —Å —Ä–µ—Ç—Ä–∞—è–º–∏
echo "üì¶ –ü—Ä–æ–±—É–µ–º –æ–±—ã—á–Ω—ã–π Dockerfile —Å —Ä–µ—Ç—Ä–∞—è–º–∏..."
docker compose build --no-cache
if [ $? -eq 0 ]; then
    echo "‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞ —Å –æ–±—ã—á–Ω—ã–º Dockerfile"
    docker compose up -d
    echo "üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
    echo "üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: docker compose ps"
    echo "üìã –õ–æ–≥–∏: docker compose logs -f"
    exit 0
fi

# –°—Ç—Ä–∞—Ç–µ–≥–∏—è 3: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –ü—Ä–æ–±—É–µ–º —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏..."
if [ -f "requirements-minimal.txt" ]; then
    cp requirements-minimal.txt requirements.txt
    docker compose build --no-cache
    if [ $? -eq 0 ]; then
        echo "‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏"
        docker compose up -d
        echo "üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
        exit 0
    fi
fi

echo "‚ùå –í—Å–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Å–±–æ—Ä–∫–∏ –Ω–µ —É–¥–∞–ª–∏—Å—å"
echo "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:"
echo "   1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"
echo "   2. –ó–∞–ø—É—Å—Ç–∏—Ç—å: docker compose logs"
echo "   3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–æ—Ç–æ–≤—ã–π –æ–±—Ä–∞–∑: docker pull python:3.11-slim"
exit 1
